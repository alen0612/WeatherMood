[{"C:\\Users\\User\\Desktop\\weather\\src\\index.js":"1","C:\\Users\\User\\Desktop\\weather\\src\\App.js":"2","C:\\Users\\User\\Desktop\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Forecast.js":"4","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Mynavbar.js":"5","C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Today.js":"6","C:\\Users\\User\\Desktop\\weather\\src\\Components\\TodayInfo.js":"7","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Loading.js":"8","C:\\Users\\User\\Desktop\\weather\\src\\Components\\PostBar.js":"9","C:\\Users\\User\\Desktop\\weather\\src\\Components\\Searchbar.js":"10","C:\\Users\\User\\Desktop\\weather\\src\\Components\\WeatherMood.js":"11","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\index.js":"12","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\reportWebVitals.js":"13","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\App.js":"14","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Mynavbar.js":"15","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Today.js":"16","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Forecast.js":"17","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Searchbar.js":"18","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Loading.js":"19","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\PostBar.js":"20","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\TodayInfo.js":"21","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\WeatherMood.js":"22","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignIn.js":"23","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignUp.js":"24"},{"size":478,"mtime":1646558344629,"results":"25","hashOfConfig":"26"},{"size":8291,"mtime":1646681816944,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":4267,"mtime":1646681859130,"results":"29","hashOfConfig":"26"},{"size":1675,"mtime":1646569194020,"results":"30","hashOfConfig":"26"},{"size":901,"mtime":1646674626030,"results":"31","hashOfConfig":"26"},{"size":395,"mtime":1646571494473,"results":"32","hashOfConfig":"26"},{"size":432,"mtime":1646719780901,"results":"33","hashOfConfig":"26"},{"size":4765,"mtime":1646841846851,"results":"34","hashOfConfig":"26"},{"size":1459,"mtime":1646818973846,"results":"35","hashOfConfig":"26"},{"size":1508,"mtime":1646846159803,"results":"36","hashOfConfig":"26"},{"size":478,"mtime":1646558344629,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":9703,"mtime":1647541435693,"results":"40","hashOfConfig":"38"},{"size":2829,"mtime":1647535459995,"results":"41","hashOfConfig":"38"},{"size":887,"mtime":1647531605966,"results":"42","hashOfConfig":"38"},{"size":4267,"mtime":1646681859130,"results":"43","hashOfConfig":"38"},{"size":1459,"mtime":1646818973846,"results":"44","hashOfConfig":"38"},{"size":432,"mtime":1646719780901,"results":"45","hashOfConfig":"38"},{"size":5040,"mtime":1647496474339,"results":"46","hashOfConfig":"38"},{"size":395,"mtime":1646571494473,"results":"47","hashOfConfig":"38"},{"size":1495,"mtime":1647497069032,"results":"48","hashOfConfig":"38"},{"size":2611,"mtime":1647544826044,"results":"49","hashOfConfig":"38"},{"size":2653,"mtime":1647546282333,"results":"50","hashOfConfig":"38"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3scgjk",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"9vwuqc",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\weather\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\App.js",["125"],[],"C:\\Users\\User\\Desktop\\weather\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Forecast.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Mynavbar.js",["126"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Pages\\Today.js",["127"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\TodayInfo.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Loading.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\PostBar.js",["128"],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\Searchbar.js",[],[],"C:\\Users\\User\\Desktop\\weather\\src\\Components\\WeatherMood.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\index.js",[],[],["129","130"],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\App.js",["131"],[],"import \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport SignIn from \"./Components/SignIn\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\nimport SignUp from \"./Components/SignUp\";\n\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  const [showToday, setShowToday] = useState(true);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openSignUp, setOpenSignUp] = useState(false);\n\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"Â°C\",\n    weather: \"Clear\",\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\",\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/WeatherMood/clearLogo.png)\",\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/WeatherMood/clear.jpg)\",\n  });\n\n  useEffect(() => {\n    getLocation();\n    getDate();\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(getLonandLat);\n    else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude);\n    //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"Â°C\" : \"Â°F\",\n          temp: parseInt(response.data.main.temp),\n          location: response.data.name,\n        }));\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data.city.name);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast((prevState) => ({\n      ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [\n        setForecastIcon(ID[0]),\n        setForecastIcon(ID[1]),\n        setForecastIcon(ID[2]),\n        setForecastIcon(ID[3]),\n      ],\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";\n    else if (ID >= 300 && ID < 600) return \"Rain\";\n    else if (ID >= 600 && ID < 700) return \"Snow\";\n    else if (ID >= 700 && ID < 800) return \"Mist\";\n    else if (ID === 800) return \"Clear\";\n    else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"Â°C\" : \"Â°F\",\n          temp: parseInt(response.data.main.temp),\n        }));\n\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n        getLocation();\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  const checkWeather = (weatherID) => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Thunderstorm\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/thunderstorm.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/thunderstormLogo.png)\" });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Rain\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/rain.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/rainLogo.png)\" });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Snow\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/snow.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/snowLogo.png)\" });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Mist\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/mist.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/mistLogo.png)\" });\n    } else if (weatherID === 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clear\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/clear.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/clearLogo.png)\" });\n    } else {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clouds\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/cloud.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/cloudLogo.png)\" });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      location: data,\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      unit: data,\n    }));\n  }\n\n  return showToday === true ? (\n    <div className=\"App\">\n      <Mynavbar\n        openSignIn={openSignIn}\n        openSignUp={openSignUp}\n        setShowToday={setShowToday}\n        setOpenSignIn={setOpenSignIn}\n        setOpenSignUp={setOpenSignUp}\n      />\n\n      {openSignIn === true ? (\n        <SignIn\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n        />\n      ) : openSignUp === true ? (\n        <SignUp\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n        />\n      ) : (\n        <Today\n          background={background}\n          logo={logo}\n          todayWeather={todayWeather}\n          getWeather={getWeather}\n          setTodayWeather={setTodayWeather}\n          setLocation={setLocation}\n          setUnit={setUnit}\n        />\n      )}\n    </div>\n  ) : (\n    <div className=\"App\">\n      <Mynavbar\n        openSignIn={openSignIn}\n        openSignUp={openSignUp}\n        setShowToday={setShowToday}\n        setOpenSignIn={setOpenSignIn}\n        setOpenSignUp={setOpenSignUp}\n      />\n\n      {openSignIn === true ? (\n        <SignIn\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n        />\n      ) : openSignUp === true ? (\n        <SignUp\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n        />\n      ) : (\n        <Forecast\n          todayWeather={todayWeather}\n          date={date}\n          dayList={dayList}\n          forecast={forecast}\n          getWeather={getWeather}\n          setTodayWeather={setTodayWeather}\n          setLocation={setLocation}\n          setUnit={setUnit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Mynavbar.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Today.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Pages\\Forecast.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Searchbar.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\Loading.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\PostBar.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\TodayInfo.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\WeatherMood.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignIn.js",[],[],"C:\\Users\\User\\Desktop\\weathermood\\client\\src\\Components\\SignUp.js",[],[],{"ruleId":"132","severity":1,"message":"133","line":40,"column":6,"nodeType":"134","endLine":40,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":34,"nodeType":"138","messageId":"139","endLine":3,"endColumn":41},{"ruleId":"136","severity":1,"message":"140","line":6,"column":17,"nodeType":"138","messageId":"139","endLine":6,"endColumn":25},{"ruleId":"136","severity":1,"message":"141","line":3,"column":27,"nodeType":"138","messageId":"139","endLine":3,"endColumn":36},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"132","severity":1,"message":"133","line":44,"column":6,"nodeType":"134","endLine":44,"endColumn":8,"suggestions":"146"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["148"],"no-negated-in-lhs",["149"],["150"],{"desc":"151","fix":"152"},"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"153"},"Update the dependencies array to be: [getLocation]",{"range":"154","text":"155"},{"range":"156","text":"155"},[1082,1084],"[getLocation]",[1276,1278]]