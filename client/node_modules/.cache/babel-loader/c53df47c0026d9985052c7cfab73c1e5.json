{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import WeatherMood from\"./WeatherMood\";import React,{Fragment,useState}from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faBoltLightning,faCloud,faSmog,faSnowflake,faSun,faTint}from\"@fortawesome/free-solid-svg-icons\";import Select from\"react-select\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBar(props){var today;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),mood=_useState2[0],setMood=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var _useState5=useState({year:0,month:0,day:0,hour:0,minute:0}),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),moodList=_useState8[0],setMoodList=_useState8[1];var options=[{value:\"Clear\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSun,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Clear\"})]})},{value:\"Cloud\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCloud,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Cloud\"})]})},{value:\"Thunder\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faBoltLightning,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Thunder\"})]})},{value:\"Rain\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTint,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Rain\"})]})},{value:\"Mist\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSmog,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Mist\"})]})},{value:\"Snow\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSnowflake,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Snow\"})]})}];var selectPlacholder=\"Mood\";var handleSelect=function handleSelect(event){setMood(event.value);};var postMood=function postMood(){today=new Date();setDate({year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes()});setMoodList([].concat(_toConsumableArray(moodList),[{content:content,mood:mood,date:date}]));setContent(\"\");setMood(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"PostBar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"PostBarInput\",children:[/*#__PURE__*/_jsx(Select,{placeholder:selectPlacholder,options:options,className:\"PostBarMood\",isSearchable:false,onChange:function onChange(event){return handleSelect(event);}}),/*#__PURE__*/_jsx(\"textarea\",{className:\"PostBarContent\",placeholder:\"What's on your mind?\",value:content,onChange:function onChange(event){setContent(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"PostBarButton\",onClick:postMood,children:\"Post\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarSpace\"}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarOutput\",children:moodList.map(function(list,index){return/*#__PURE__*/_jsx(WeatherMood,{content:list.content,mood:list.mood,date:date},index);})})]});}export default PostBar;","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Components/PostBar.js"],"names":["WeatherMood","React","Fragment","useState","FontAwesomeIcon","faBoltLightning","faCloud","faSmog","faSnowflake","faSun","faTint","Select","PostBar","props","today","mood","setMood","content","setContent","year","month","day","hour","minute","date","setDate","moodList","setMoodList","options","value","label","selectPlacholder","handleSelect","event","postMood","Date","getFullYear","getMonth","getDate","getHours","getMinutes","target","map","list","index"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [date, setDate] = useState({\r\n    year: 0,\r\n    month: 0,\r\n    day: 0,\r\n    hour: 0,\r\n    minute: 0,\r\n  });\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  const options = [\r\n    {\r\n      value: \"Clear\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSun} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Clear</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Cloud\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faCloud} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Cloud</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Thunder\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon\r\n            icon={faBoltLightning}\r\n            className=\"PostBarSelectIcon\"\r\n          />\r\n          <span className=\"PostBarSelectSpan\">Thunder</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Rain\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faTint} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Rain</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Mist\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSmog} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Mist</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Snow\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSnowflake} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Snow</span>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const selectPlacholder = \"Mood\";\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    today = new Date();\r\n    setDate({\r\n      year: today.getFullYear(),\r\n      month: today.getMonth() + 1,\r\n      day: today.getDate(),\r\n      hour: today.getHours(),\r\n      minute: today.getMinutes(),\r\n    });\r\n\r\n    setMoodList([...moodList, { content: content, mood: mood, date: date }]);\r\n    setContent(\"\");\r\n    setMood(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        <Select\r\n          placeholder={selectPlacholder}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={(event) => handleSelect(event)}\r\n        />\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((list, index) => {\r\n          return (\r\n            <WeatherMood\r\n              content={list.content}\r\n              mood={list.mood}\r\n              date={date}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}