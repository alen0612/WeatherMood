{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import React,{useEffect,useState}from\"react\";import{Container,Nav,Navbar,NavLink}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Mynavbar(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showToday=_useState2[0],setShowToday=_useState2[1];useEffect(function(){//console.log(\"use effect: \" + showToday);\nif(showToday)props.setShowToday(true);else props.setShowToday(false);});var todayFontWeight=showToday?{fontWeight:\"bold\"}:{fontWeight:\"normal\"};var forecastFontWeight=showToday?{fontWeight:\"normal\"}:{fontWeight:\"bold\"};return/*#__PURE__*/ (/*<Navbar bg=\"light\" sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/today\">Today</Nav.Link>\r\n          <Nav.Link href=\"/forecast\">Forcast</Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n  </Navbar>*/_jsx(Navbar,{bg:\"light\",sticky:\"top\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Navbar.Brand,{children:\"WeatherMood\"}),/*#__PURE__*/_jsxs(Nav,{className:\"me-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navItem\",style:todayFontWeight,onClick:function onClick(){//console.log(\"today clicked\");\nsetShowToday(true);},children:\"Today\"}),/*#__PURE__*/_jsx(\"div\",{className:\"navItem\",style:forecastFontWeight,onClick:function onClick(){//console.log(\"forecast clicked\");\nsetShowToday(false);},children:\"Forcast\"})]})]})}));}export default Mynavbar;","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Components/Mynavbar.js"],"names":["React","useEffect","useState","Container","Nav","Navbar","NavLink","Mynavbar","props","showToday","setShowToday","todayFontWeight","fontWeight","forecastFontWeight"],"mappings":"uHAAA,MAAO,YAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,MAAzB,CAAiCC,OAAjC,KAAgD,iBAAhD,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,cAAkCN,QAAQ,CAAC,IAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eAEAT,SAAS,CAAC,UAAM,CACd;AACA,GAAIQ,SAAJ,CAAeD,KAAK,CAACE,YAAN,CAAmB,IAAnB,EAAf,IACKF,CAAAA,KAAK,CAACE,YAAN,CAAmB,KAAnB,EACN,CAJQ,CAAT,CAMA,GAAIC,CAAAA,eAAe,CAAGF,SAAS,CAC3B,CAAEG,UAAU,CAAE,MAAd,CAD2B,CAE3B,CAAEA,UAAU,CAAE,QAAd,CAFJ,CAIA,GAAIC,CAAAA,kBAAkB,CAAGJ,SAAS,CAC9B,CAAEG,UAAU,CAAE,QAAd,CAD8B,CAE9B,CAAEA,UAAU,CAAE,MAAd,CAFJ,CAIA,oBACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACI,KAAC,MAAD,EAAQ,EAAE,CAAC,OAAX,CAAmB,MAAM,CAAC,KAA1B,uBACE,MAAC,SAAD,yBACE,KAAC,MAAD,CAAQ,KAAR,0BADF,cAEE,MAAC,GAAD,EAAK,SAAS,CAAC,SAAf,wBACE,YACE,SAAS,CAAC,SADZ,CAEE,KAAK,CAAED,eAFT,CAGE,OAAO,CAAE,kBAAM,CACb;AACAD,YAAY,CAAC,IAAD,CAAZ,CACD,CANH,mBADF,cAWE,YACE,SAAS,CAAC,SADZ,CAEE,KAAK,CAAEG,kBAFT,CAGE,OAAO,CAAE,kBAAM,CACb;AACAH,YAAY,CAAC,KAAD,CAAZ,CACD,CANH,qBAXF,GAFF,GADF,EAVF,EAsCD,CAED,cAAeH,CAAAA,QAAf","sourcesContent":["import \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Nav, Navbar, NavLink } from \"react-bootstrap\";\r\n\r\nfunction Mynavbar(props) {\r\n  const [showToday, setShowToday] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"use effect: \" + showToday);\r\n    if (showToday) props.setShowToday(true);\r\n    else props.setShowToday(false);\r\n  });\r\n\r\n  let todayFontWeight = showToday\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  let forecastFontWeight = showToday\r\n    ? { fontWeight: \"normal\" }\r\n    : { fontWeight: \"bold\" };\r\n\r\n  return (\r\n    /*<Navbar bg=\"light\" sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/today\">Today</Nav.Link>\r\n          <Nav.Link href=\"/forecast\">Forcast</Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n  </Navbar>*/\r\n    <Navbar bg=\"light\" sticky=\"top\">\r\n      <Container>\r\n        <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n        <Nav className=\"me-auto\">\r\n          <div\r\n            className=\"navItem\"\r\n            style={todayFontWeight}\r\n            onClick={() => {\r\n              //console.log(\"today clicked\");\r\n              setShowToday(true);\r\n            }}\r\n          >\r\n            Today\r\n          </div>\r\n          <div\r\n            className=\"navItem\"\r\n            style={forecastFontWeight}\r\n            onClick={() => {\r\n              //console.log(\"forecast clicked\");\r\n              setShowToday(false);\r\n            }}\r\n          >\r\n            Forcast\r\n          </div>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Mynavbar;\r\n"]},"metadata":{},"sourceType":"module"}