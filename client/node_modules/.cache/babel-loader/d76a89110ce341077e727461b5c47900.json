{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Desktop/weathermood/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/User/Desktop/weathermood/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import WeatherMood from\"./WeatherMood\";import React,{Fragment,useState,useEffect}from\"react\";import axios from\"axios\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faBoltLightning,faCloud,faQuestionCircle,faSmog,faSnowflake,faSun,faTint}from\"@fortawesome/free-solid-svg-icons\";import Select from\"react-select\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBar(props){var today;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),mood=_useState2[0],setMood=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setID=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),moodList=_useState8[0],setMoodList=_useState8[1];useEffect(function(){axios.get(\"http://localhost:3001/posts\").then(function(response){//console.log(response.data);\nsetMoodList(response.data);//console.log(moodList);\n});},[]);var handleSelect=function handleSelect(event){setMood(event.value);};var postMood=function postMood(){if(content===\"\"||mood===\"Mood\"||mood===\"\")return;today=new Date();axios.post(\"http://localhost:3001/posts\",{content:content,mood:mood,year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes()},{headers:{accessToken:localStorage.getItem(\"accessToken\")}}).then(function(response){if(response.data.error){alert(\"Loggin to post!\");}else{setMoodList([].concat(_toConsumableArray(moodList),[{content:content,mood:mood,id:id,year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes(),username:response.data.username}]));setContent(\"\");setMood(\"\");setID(id+1);}});};var deletePost=function deletePost(ID){axios.delete(\"http://localhost:3001/posts/\".concat(ID)).then(function(){console.log(\"remove the post\");var newList=moodList;var updateList=newList.filter(function(item){return item.id!==ID;});setMoodList(updateList);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"PostBar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"PostBarInput\",children:[/*#__PURE__*/_jsxs(\"select\",{className:\"PostBarMood\",defaultValue:\"DEFAULT\",onChange:handleSelect,children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"DEFAULT\",hidden:true,className:\"moodSelectDefault\",children:\"Mood?\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Clear\",className:\"moodSelector\",children:\"Clear\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cloud\",className:\"moodSelector\",children:\"Cloud\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Thunder\",className:\"moodSelector\",children:\"Thunder\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Rain\",className:\"moodSelector\",children:\"Rain\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mist\",className:\"moodSelector\",children:\"Mist\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Snow\",className:\"moodSelector\",children:\"Snow\"})]}),/*#__PURE__*/_jsx(\"textarea\",{className:\"PostBarContent\",placeholder:\"What's on your mind?\",value:content,onChange:function onChange(event){setContent(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"PostBarButton\",onClick:postMood,children:\"Post\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarSpace\"}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarOutput\",children:moodList.map(function(moodList,index){return/*#__PURE__*/_jsx(WeatherMood,{username:moodList.username,currentUser:props.currentUser,content:moodList.content,mood:moodList.mood,id:moodList.id,year:moodList.year,month:moodList.month,day:moodList.day,hour:moodList.hour,minute:moodList.minute,deletePost:deletePost},index);})})]});}export default PostBar;","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/client/src/Components/PostBar.js"],"names":["WeatherMood","React","Fragment","useState","useEffect","axios","FontAwesomeIcon","faBoltLightning","faCloud","faQuestionCircle","faSmog","faSnowflake","faSun","faTint","Select","PostBar","props","today","mood","setMood","content","setContent","id","setID","moodList","setMoodList","get","then","response","data","handleSelect","event","value","postMood","Date","post","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","headers","accessToken","localStorage","getItem","error","alert","username","deletePost","ID","delete","console","log","newList","updateList","filter","item","target","map","index","currentUser"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faQuestionCircle,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setID] = useState(0);\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/posts\").then((response) => {\r\n      //console.log(response.data);\r\n      setMoodList(response.data);\r\n      //console.log(moodList);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    if (content === \"\" || mood === \"Mood\" || mood === \"\") return;\r\n    today = new Date();\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/posts\",\r\n        {\r\n          content: content,\r\n          mood: mood,\r\n          year: today.getFullYear(),\r\n          month: today.getMonth() + 1,\r\n          day: today.getDate(),\r\n          hour: today.getHours(),\r\n          minute: today.getMinutes(),\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: localStorage.getItem(\"accessToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.error) {\r\n          alert(\"Loggin to post!\");\r\n        } else {\r\n          setMoodList([\r\n            ...moodList,\r\n            {\r\n              content: content,\r\n              mood: mood,\r\n              id: id,\r\n              year: today.getFullYear(),\r\n              month: today.getMonth() + 1,\r\n              day: today.getDate(),\r\n              hour: today.getHours(),\r\n              minute: today.getMinutes(),\r\n              username: response.data.username,\r\n            },\r\n          ]);\r\n\r\n          setContent(\"\");\r\n          setMood(\"\");\r\n          setID(id + 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  const deletePost = (ID) => {\r\n    axios.delete(`http://localhost:3001/posts/${ID}`).then(() => {\r\n      console.log(\"remove the post\");\r\n      const newList = moodList;\r\n      const updateList = newList.filter((item) => item.id !== ID);\r\n\r\n      setMoodList(updateList);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        {/*<Select\r\n          placeholder={defaultMood.label}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={handleSelect}\r\n        />*/}\r\n        <select\r\n          className=\"PostBarMood\"\r\n          defaultValue={\"DEFAULT\"}\r\n          onChange={handleSelect}\r\n        >\r\n          <option disabled value=\"DEFAULT\" hidden className=\"moodSelectDefault\">\r\n            Mood?\r\n          </option>\r\n          <option value=\"Clear\" className=\"moodSelector\">\r\n            Clear\r\n          </option>\r\n          <option value=\"Cloud\" className=\"moodSelector\">\r\n            Cloud\r\n          </option>\r\n          <option value=\"Thunder\" className=\"moodSelector\">\r\n            Thunder\r\n          </option>\r\n          <option value=\"Rain\" className=\"moodSelector\">\r\n            Rain\r\n          </option>\r\n          <option value=\"Mist\" className=\"moodSelector\">\r\n            Mist\r\n          </option>\r\n          <option value=\"Snow\" className=\"moodSelector\">\r\n            Snow\r\n          </option>\r\n        </select>\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((moodList, index) => {\r\n          return (\r\n            <WeatherMood\r\n              username={moodList.username}\r\n              currentUser={props.currentUser}\r\n              content={moodList.content}\r\n              mood={moodList.mood}\r\n              id={moodList.id}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              key={index}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}