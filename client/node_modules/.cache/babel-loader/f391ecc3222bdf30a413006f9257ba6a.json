{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\client\\\\src\\\\Components\\\\PostBar.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport WeatherMood from \"./WeatherMood\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBoltLightning, faCloud, faQuestionCircle, faSmog, faSnowflake, faSun, faTint } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostBar(props) {\n  _s();\n\n  let today;\n  const [mood, setMood] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [id, setID] = useState(0);\n  const [moodList, setMoodList] = useState([]);\n  const options = [{\n    value: \"Clear\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSun,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Cloud\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloud,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Cloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Thunder\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBoltLightning,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Thunder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Rain\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTint,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Rain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Mist\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSmog,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Mist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Snow\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSnowflake,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Snow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const defaultMood = {\n    value: \"Mood\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faQuestionCircle,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/posts\").then(response => {\n      //console.log(response.data);\n      setMoodList(response.data); //console.log(moodList);\n    });\n  }, []);\n\n  const handleSelect = event => {\n    setMood(event.value);\n  };\n\n  const postMood = () => {\n    if (content === \"\" || mood === \"Mood\" || mood === \"\") return;\n    today = new Date();\n    console.log(\"ready!\");\n    console.log(\"content: \" + content);\n    console.log(\"mood: \" + mood);\n    axios.post(\"http://localhost:3001/posts\", {\n      content: content,\n      mood: mood\n    }).then(response => {});\n    /*setMoodList([\r\n      ...moodList,\r\n      {\r\n        content: content,\r\n        mood: mood,\r\n        id: id,\r\n        year: today.getFullYear(),\r\n        month: today.getMonth() + 1,\r\n        day: today.getDate(),\r\n        hour: today.getHours(),\r\n        minute: today.getMinutes(),\r\n      },\r\n    ]);*/\n\n    setContent(\"\");\n    setMood(\"\");\n    setID(id + 1);\n  };\n\n  const deletePost = ID => {\n    //console.log(\"delete ID: \" + ID);\n    //console.log(\"mood list content: \" + JSON.stringify(moodList[ID].content));\n    const newList = moodList; //console.log(\"new List: \" + JSON.stringify(newListContent));\n\n    const updateList = newList.filter(item => item.id !== ID); //console.log(\"updateList: \" + JSON.stringify(updateList[0]));\n\n    setMoodList(updateList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarInput\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        placeholder: defaultMood.label,\n        options: options,\n        className: \"PostBarMood\",\n        isSearchable: false,\n        onChange: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"PostBarContent\",\n        placeholder: \"What's on your mind?\",\n        value: content,\n        onChange: event => {\n          setContent(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PostBarButton\",\n        onClick: postMood,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarSpace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarOutput\",\n      children: moodList.map((value, key) => {\n        return /*#__PURE__*/_jsxDEV(WeatherMood, {\n          content: value.content,\n          mood: value.mood,\n          id: moodList.id,\n          createAt: value.createAt,\n          year: moodList.year,\n          month: moodList.month,\n          day: moodList.day,\n          hour: moodList.hour,\n          minute: moodList.minute,\n          deletePost: deletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostBar, \"Z5SNeLtEEsRAit9o1A9Bs5RwFdI=\");\n\n_c = PostBar;\nexport default PostBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBar\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/client/src/Components/PostBar.js"],"names":["WeatherMood","React","Fragment","useState","useEffect","axios","FontAwesomeIcon","faBoltLightning","faCloud","faQuestionCircle","faSmog","faSnowflake","faSun","faTint","Select","PostBar","props","today","mood","setMood","content","setContent","id","setID","moodList","setMoodList","options","value","label","defaultMood","get","then","response","data","handleSelect","event","postMood","Date","console","log","post","deletePost","ID","newList","updateList","filter","item","target","map","key","createAt","year","month","day","hour","minute"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faQuestionCircle,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setID] = useState(0);\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  const options = [\r\n    {\r\n      value: \"Clear\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSun} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Clear</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Cloud\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faCloud} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Cloud</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Thunder\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon\r\n            icon={faBoltLightning}\r\n            className=\"PostBarSelectIcon\"\r\n          />\r\n          <span className=\"PostBarSelectSpan\">Thunder</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Rain\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faTint} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Rain</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Mist\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSmog} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Mist</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Snow\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSnowflake} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Snow</span>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const defaultMood = {\r\n    value: \"Mood\",\r\n    label: (\r\n      <>\r\n        <FontAwesomeIcon\r\n          icon={faQuestionCircle}\r\n          className=\"PostBarSelectIcon\"\r\n        />\r\n        <span className=\"PostBarSelectSpan\">Mood</span>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/posts\").then((response) => {\r\n      //console.log(response.data);\r\n      setMoodList(response.data);\r\n      //console.log(moodList);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    if (content === \"\" || mood === \"Mood\" || mood === \"\") return;\r\n    today = new Date();\r\n    console.log(\"ready!\");\r\n    console.log(\"content: \" + content);\r\n    console.log(\"mood: \" + mood);\r\n\r\n    axios\r\n      .post(\"http://localhost:3001/posts\", { content: content, mood: mood })\r\n      .then((response) => {});\r\n\r\n    /*setMoodList([\r\n      ...moodList,\r\n      {\r\n        content: content,\r\n        mood: mood,\r\n        id: id,\r\n        year: today.getFullYear(),\r\n        month: today.getMonth() + 1,\r\n        day: today.getDate(),\r\n        hour: today.getHours(),\r\n        minute: today.getMinutes(),\r\n      },\r\n    ]);*/\r\n\r\n    setContent(\"\");\r\n    setMood(\"\");\r\n    setID(id + 1);\r\n  };\r\n\r\n  const deletePost = (ID) => {\r\n    //console.log(\"delete ID: \" + ID);\r\n    //console.log(\"mood list content: \" + JSON.stringify(moodList[ID].content));\r\n    const newList = moodList;\r\n    //console.log(\"new List: \" + JSON.stringify(newListContent));\r\n    const updateList = newList.filter((item) => item.id !== ID);\r\n    //console.log(\"updateList: \" + JSON.stringify(updateList[0]));\r\n\r\n    setMoodList(updateList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        <Select\r\n          placeholder={defaultMood.label}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={handleSelect}\r\n        />\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {/*{moodList.map((moodList, index) => {\r\n          return (\r\n            <WeatherMood\r\n              content={moodList.content}\r\n              mood={moodList.mood}\r\n              id={moodList.id}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              key={index}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}*/}\r\n        {moodList.map((value, key) => {\r\n          return (\r\n            <WeatherMood\r\n              content={value.content}\r\n              mood={value.mood}\r\n              id={moodList.id}\r\n              createAt={value.createAt}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}