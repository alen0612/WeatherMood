{"ast":null,"code":"import _objectSpread from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./App.css\";import Mynavbar from\"./Components/Mynavbar\";import Today from\"./Pages/Today\";import Forecast from\"./Pages/Forecast\";import React,{useEffect,useState}from\"react\";import{Alert}from\"bootstrap\";import Axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var APIkey=\"029ab88b8a27d39ef20a062c38c4b411\";function App(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showToday=_useState2[0],setShowToday=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var dayList=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thur\",\"Fri\",\"Sat\"];var _useState5=useState({location:\"Taipei\",unit:\"metric\",temp:0,graph:\"°C\",weather:\"Clear\"}),_useState6=_slicedToArray(_useState5,2),todayWeather=_useState6[0],setTodayWeather=_useState6[1];var _useState7=useState({temp:[0,0,0,0],weather:[\"Clear\",\"Clear\",\"Clear\",\"Clear\"],id:[0,0,0,0],location:\"Taipei\"}),_useState8=_slicedToArray(_useState7,2),forecast=_useState8[0],setForecast=_useState8[1];var _useState9=useState({backgroundImage:\"url(/public/clearLogo.png)\"}),_useState10=_slicedToArray(_useState9,2),logo=_useState10[0],setLogo=_useState10[1];var _useState11=useState({backgroundImage:\"url(/public/clear.jpg)\"}),_useState12=_slicedToArray(_useState11,2),background=_useState12[0],setBackground=_useState12[1];useEffect(function(){getLocation();getDate();},[]);var getDate=function getDate(){var day=new Date();setDate(day.getDay());};var getLocation=function getLocation(){if(navigator.geolocation)navigator.geolocation.getCurrentPosition(getLonandLat);else Alert(\"Geolocation is not supported!\");};function getLonandLat(position){initialWeather(position.coords.longitude,position.coords.latitude);//initialForecast(position.coords.longitude, position.coords.latitude);\n}var initialWeather=function initialWeather(lon,lat){// this will render initial page when user get in website for the first time\nAxios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+lat+\"&lon=\"+lon+\"&units=\"+todayWeather.unit+\"&appid=\"+APIkey).then(function(response){//console.log(response.data);\n//console.log(response.data.weather[0].main);\nsetTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{graph:todayWeather.unit===\"metric\"?\"°C\":\"°F\",temp:parseInt(response.data.main.temp),location:response.data.name});});checkWeather(response.data.weather[0].id);}).catch(function(error){alert(\"City Not Found!\");});Axios.get(\"https://api.openweathermap.org/data/2.5/forecast?lat=\"+lat+\"&lon=\"+lon+\"&units=\"+todayWeather.unit+\"&appid=\"+APIkey).then(function(response){//console.log(response.data.city.name);\nsetForecast(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{temp:[parseInt(response.data.list[8].main.temp),parseInt(response.data.list[16].main.temp),parseInt(response.data.list[24].main.temp),parseInt(response.data.list[32].main.temp)],location:response.data.city.name});});checkForecastWeather([response.data.list[8].weather[0].id,response.data.list[16].weather[0].id,response.data.list[24].weather[0].id,response.data.list[32].weather[0].id]);});};function checkForecastWeather(ID){//console.log(\"set forecast ID\");\nsetForecast(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{id:[ID[0],ID[1],ID[2],ID[3]],weather:[setForecastIcon(ID[0]),setForecastIcon(ID[1]),setForecastIcon(ID[2]),setForecastIcon(ID[3])]});});}function setForecastIcon(ID){//console.log(\"set forecast icon\");\nif(ID>=200&&ID<300)return\"Tunderstorm\";else if(ID>=300&&ID<600)return\"Rain\";else if(ID>=600&&ID<700)return\"Snow\";else if(ID>=700&&ID<800)return\"Mist\";else if(ID===800)return\"Clear\";else return\"Clouds\";}var getWeather=function getWeather(){//console.log(\"int today.getWeather: \" + unit);\nAxios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+todayWeather.location+\"&units=\"+todayWeather.unit+\"&appid=\"+APIkey).then(function(response){//console.log(response.data);\n//console.log(response.data.weather[0].main);\nsetTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{graph:todayWeather.unit===\"metric\"?\"°C\":\"°F\",temp:parseInt(response.data.main.temp)});});checkWeather(response.data.weather[0].id);}).catch(function(error){alert(\"City Not Found!\");getLocation();});Axios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=\"+todayWeather.location+\"&units=\"+todayWeather.unit+\"&appid=\"+APIkey).then(function(response){//console.log(response.data);\nsetForecast(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{temp:[parseInt(response.data.list[8].main.temp),parseInt(response.data.list[16].main.temp),parseInt(response.data.list[24].main.temp),parseInt(response.data.list[32].main.temp)],location:response.data.city.name});});checkForecastWeather([response.data.list[8].weather[0].id,response.data.list[16].weather[0].id,response.data.list[24].weather[0].id,response.data.list[32].weather[0].id]);});};var checkWeather=function checkWeather(weatherID){if(weatherID>=200&&weatherID<300){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Thunderstorm\"});});setBackground({backgroundImage:\"url(/public/thunderstorm.jpg)\"});setLogo({backgroundImage:\"url(/public/thunderstormLogo.png)\"});}else if(weatherID>=300&&weatherID<600){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Rain\"});});setBackground({backgroundImage:\"url(/public/rain.jpg)\"});setLogo({backgroundImage:\"url(/public/rainLogo.png)\"});}else if(weatherID>=600&&weatherID<700){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Snow\"});});setBackground({backgroundImage:\"url(/public/snow.jpg)\"});setLogo({backgroundImage:\"url(/public/snowLogo.png)\"});}else if(weatherID>=700&&weatherID<800){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Mist\"});});setBackground({backgroundImage:\"url(/public/mist.jpg)\"});setLogo({backgroundImage:\"url(/public/mistLogo.png)\"});}else if(weatherID===800){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Clear\"});});setBackground({backgroundImage:\"url(/public/clear.jpg)\"});setLogo({backgroundImage:\"url(/public/clearLogo.png)\"});}else{setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{weather:\"Clouds\"});});setBackground({backgroundImage:\"url(/public/cloud.jpg)\"});setLogo({backgroundImage:\"url(/public/cloudLogo.png)\"});}};function setLocation(data){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{location:data});});}function setUnit(data){setTodayWeather(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{unit:data});});}return showToday===true?/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Mynavbar,{setShowToday:setShowToday}),/*#__PURE__*/_jsx(Today,{background:background,logo:logo,todayWeather:todayWeather,getWeather:getWeather,setTodayWeather:setTodayWeather,setLocation:setLocation,setUnit:setUnit})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Mynavbar,{setShowToday:setShowToday}),/*#__PURE__*/_jsx(Forecast,{todayWeather:todayWeather,date:date,dayList:dayList,forecast:forecast,getWeather:getWeather,setTodayWeather:setTodayWeather,setLocation:setLocation,setUnit:setUnit})]});}export default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/App.js"],"names":["Mynavbar","Today","Forecast","React","useEffect","useState","Alert","Axios","APIkey","App","showToday","setShowToday","date","setDate","dayList","location","unit","temp","graph","weather","todayWeather","setTodayWeather","id","forecast","setForecast","backgroundImage","logo","setLogo","background","setBackground","getLocation","getDate","day","Date","getDay","navigator","geolocation","getCurrentPosition","getLonandLat","position","initialWeather","coords","longitude","latitude","lon","lat","get","then","response","prevState","parseInt","data","main","name","checkWeather","catch","error","alert","list","city","checkForecastWeather","ID","setForecastIcon","getWeather","weatherID","setLocation","setUnit"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\n\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  const [showToday, setShowToday] = useState(true);\n\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"°C\",\n    weather: \"Clear\",\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\",\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/public/clearLogo.png)\",\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/public/clear.jpg)\",\n  });\n\n  useEffect(() => {\n    getLocation();\n    getDate();\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(getLonandLat);\n    else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude);\n    //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n          location: response.data.name,\n        }));\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data.city.name);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast((prevState) => ({\n      ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [\n        setForecastIcon(ID[0]),\n        setForecastIcon(ID[1]),\n        setForecastIcon(ID[2]),\n        setForecastIcon(ID[3]),\n      ],\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";\n    else if (ID >= 300 && ID < 600) return \"Rain\";\n    else if (ID >= 600 && ID < 700) return \"Snow\";\n    else if (ID >= 700 && ID < 800) return \"Mist\";\n    else if (ID === 800) return \"Clear\";\n    else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n        }));\n\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n        getLocation();\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  const checkWeather = (weatherID) => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Thunderstorm\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/thunderstorm.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/thunderstormLogo.png)\" });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Rain\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/rain.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/rainLogo.png)\" });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Snow\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/snow.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/snowLogo.png)\" });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Mist\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/mist.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/mistLogo.png)\" });\n    } else if (weatherID === 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clear\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/clear.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/clearLogo.png)\" });\n    } else {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clouds\",\n      }));\n      setBackground({ backgroundImage: \"url(/public/cloud.jpg)\" });\n      setLogo({ backgroundImage: \"url(/public/cloudLogo.png)\" });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      location: data,\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      unit: data,\n    }));\n  }\n\n  return showToday === true ? (\n    <div className=\"App\">\n      <Mynavbar setShowToday={setShowToday} />\n\n      <Today\n        background={background}\n        logo={logo}\n        todayWeather={todayWeather}\n        getWeather={getWeather}\n        setTodayWeather={setTodayWeather}\n        setLocation={setLocation}\n        setUnit={setUnit}\n      />\n    </div>\n  ) : (\n    <div className=\"App\">\n      <Mynavbar setShowToday={setShowToday} />\n\n      <Forecast\n        todayWeather={todayWeather}\n        date={date}\n        dayList={dayList}\n        forecast={forecast}\n        getWeather={getWeather}\n        setTodayWeather={setTodayWeather}\n        setLocation={setLocation}\n        setUnit={setUnit}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}