{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\src\\\\Pages\\\\Today.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport Showinfo from \"../Components/Showinfo\";\nimport Searchbar from \"../Components/Searchbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction Today() {\n  _s();\n\n  const [location, setLocation] = useState(\"Taipei\");\n  const [temp, setTemp] = useState(0);\n  const [id, setId] = useState(0);\n  const [weather, setWeather] = useState(\"clear\");\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/clearSky.jpg)\"\n  });\n  const weatherInfo = {\n    location: location,\n    temp: temp,\n    id: id,\n    weather: weather,\n    setLocation: setLocation,\n    setTemp: setTemp,\n    setId: setId,\n    setWeather: setWeather\n  };\n\n  const getWeather = () => {\n    Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + location + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data);\n      setTemp(response.data.main.temp);\n      setId(response.data.weather[0].id);\n      checkWeather();\n    });\n  };\n\n  const checkWeather = () => {\n    if (id < 300) {\n      setWeather(\"thunderstorm\");\n      setBackground({\n        backgroundImage: \"url(/thunderstorm.jpg)\"\n      });\n    } else if (id >= 300 && id < 600) {\n      setWeather(\"rain\");\n      setBackground({\n        backgroundImage: \"url(/rain.jpg)\"\n      });\n    } else if (id >= 600 && id < 700) {\n      setWeather(\"snow\");\n      setBackground({\n        backgroundImage: \"url(/snow.jpg)\"\n      });\n    } else if (id >= 700 && id < 800) {\n      setWeather(\"mist\");\n      setBackground({\n        backgroundImage: \"url(/mist.jpg)\"\n      });\n    } else {\n      setWeather(\"clear\");\n      setBackground({\n        backgroundImage: \"url(/clearSky.jpg)\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: background,\n    className: \"today\",\n    children: [/*#__PURE__*/_jsxDEV(Showinfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n      info: weatherInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Today, \"dwJqSvwmMWyrKHTu8CjBLZsA5yU=\");\n\n_c = Today;\nexport default Today;\n\nvar _c;\n\n$RefreshReg$(_c, \"Today\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Pages/Today.js"],"names":["React","useState","Axios","Showinfo","Searchbar","APIkey","Today","location","setLocation","temp","setTemp","id","setId","weather","setWeather","background","setBackground","backgroundImage","weatherInfo","getWeather","get","then","response","data","main","checkWeather"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Showinfo from \"../Components/Showinfo\";\r\nimport Searchbar from \"../Components/Searchbar\";\r\n\r\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\r\n\r\nfunction Today() {\r\n  const [location, setLocation] = useState(\"Taipei\");\r\n  const [temp, setTemp] = useState(0);\r\n  const [id, setId] = useState(0);\r\n  const [weather, setWeather] = useState(\"clear\");\r\n  const [background, setBackground] = useState({\r\n    backgroundImage: \"url(/clearSky.jpg)\",\r\n  });\r\n\r\n  const weatherInfo = {\r\n    location: location,\r\n    temp: temp,\r\n    id: id,\r\n    weather: weather,\r\n    setLocation: setLocation,\r\n    setTemp: setTemp,\r\n    setId: setId,\r\n    setWeather: setWeather,\r\n  };\r\n\r\n  const getWeather = () => {\r\n    Axios.get(\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n        location +\r\n        \"&appid=\" +\r\n        APIkey\r\n    ).then((response) => {\r\n      //console.log(response.data);\r\n      setTemp(response.data.main.temp);\r\n      setId(response.data.weather[0].id);\r\n      checkWeather();\r\n    });\r\n  };\r\n\r\n  const checkWeather = () => {\r\n    if (id < 300) {\r\n      setWeather(\"thunderstorm\");\r\n      setBackground({ backgroundImage: \"url(/thunderstorm.jpg)\" });\r\n    } else if (id >= 300 && id < 600) {\r\n      setWeather(\"rain\");\r\n      setBackground({ backgroundImage: \"url(/rain.jpg)\" });\r\n    } else if (id >= 600 && id < 700) {\r\n      setWeather(\"snow\");\r\n      setBackground({ backgroundImage: \"url(/snow.jpg)\" });\r\n    } else if (id >= 700 && id < 800) {\r\n      setWeather(\"mist\");\r\n      setBackground({ backgroundImage: \"url(/mist.jpg)\" });\r\n    } else {\r\n      setWeather(\"clear\");\r\n      setBackground({ backgroundImage: \"url(/clearSky.jpg)\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={background} className=\"today\">\r\n      <Showinfo />\r\n      <Searchbar info={weatherInfo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Today;\r\n"]},"metadata":{},"sourceType":"module"}