{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\client\\\\src\\\\Components\\\\Mynavbar.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mynavbar(props) {\n  _s();\n\n  const [showToday, setShowToday] = useState(true);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  useEffect(() => {\n    //console.log(\"use effect: \" + showToday);\n    if (showToday) props.setShowToday(true);else props.setShowToday(false);\n  });\n  let todayFontWeight = showToday && !props.openSignIn && !props.openSignUp ? {\n    fontWeight: \"bold\"\n  } : {\n    fontWeight: \"normal\"\n  };\n  let forecastFontWeight = !showToday && !props.openSignIn && !props.openSignUp ? {\n    fontWeight: \"bold\"\n  } : {\n    fontWeight: \"normal\"\n  };\n  let signInFontWeight = props.openSignIn ? {\n    fontWeight: \"bold\"\n  } : {\n    fontWeight: \"normal\"\n  };\n  let signUpFontWeight = props.openSignUp ? {\n    fontWeight: \"bold\"\n  } : {\n    fontWeight: \"normal\"\n  };\n\n  const handleSignInClick = () => {\n    props.setOpenSignIn(true);\n    props.setOpenSignUp(false);\n  };\n\n  const handleSignUpClick = () => {\n    props.setOpenSignIn(false);\n    props.setOpenSignUp(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      sticky: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"WeatherMood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbarLinks\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navbarLeft\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navItem\",\n                style: todayFontWeight,\n                onClick: () => {\n                  if (!props.openSignIn && !props.openSignUp) setShowToday(true);\n                },\n                children: \"Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navItem\",\n                style: forecastFontWeight,\n                onClick: () => {\n                  if (!props.openSignIn && !props.openSignUp) setShowToday(false);\n                },\n                children: \"Forcast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"navbarRight\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Signedusername\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navItem\",\n                style: signInFontWeight,\n                setCurrentUser: setCurrentUser,\n                onClick: () => {\n                  handleSignInClick();\n                },\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"navItem\",\n                style: signUpFontWeight,\n                onClick: () => {\n                  handleSignUpClick();\n                },\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mynavbar, \"29vfIpXS6UP9HY9oSM3MpLwr4Kg=\");\n\n_c = Mynavbar;\nexport default Mynavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mynavbar\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/client/src/Components/Mynavbar.js"],"names":["React","useEffect","useState","Container","Nav","Navbar","Mynavbar","props","showToday","setShowToday","currentUser","setCurrentUser","todayFontWeight","openSignIn","openSignUp","fontWeight","forecastFontWeight","signInFontWeight","signUpFontWeight","handleSignInClick","setOpenSignIn","setOpenSignUp","handleSignUpClick"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\n\r\nfunction Mynavbar(props) {\r\n  const [showToday, setShowToday] = useState(true);\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //console.log(\"use effect: \" + showToday);\r\n    if (showToday) props.setShowToday(true);\r\n    else props.setShowToday(false);\r\n  });\r\n\r\n  let todayFontWeight =\r\n    showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let forecastFontWeight =\r\n    !showToday && !props.openSignIn && !props.openSignUp\r\n      ? { fontWeight: \"bold\" }\r\n      : { fontWeight: \"normal\" };\r\n\r\n  let signInFontWeight = props.openSignIn\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  let signUpFontWeight = props.openSignUp\r\n    ? { fontWeight: \"bold\" }\r\n    : { fontWeight: \"normal\" };\r\n\r\n  const handleSignInClick = () => {\r\n    props.setOpenSignIn(true);\r\n    props.setOpenSignUp(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    props.setOpenSignIn(false);\r\n    props.setOpenSignUp(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" sticky=\"top\">\r\n        <Container>\r\n          <Navbar.Brand>WeatherMood</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <div className=\"navbarLinks\">\r\n              <div className=\"navbarLeft\">\r\n                <div\r\n                  className=\"navItem\"\r\n                  style={todayFontWeight}\r\n                  onClick={() => {\r\n                    if (!props.openSignIn && !props.openSignUp)\r\n                      setShowToday(true);\r\n                  }}\r\n                >\r\n                  Today\r\n                </div>\r\n                <div\r\n                  className=\"navItem\"\r\n                  style={forecastFontWeight}\r\n                  onClick={() => {\r\n                    if (!props.openSignIn && !props.openSignUp)\r\n                      setShowToday(false);\r\n                  }}\r\n                >\r\n                  Forcast\r\n                </div>\r\n              </div>\r\n              <div className=\"navbarRight\">\r\n                <div className=\"Signedusername\"></div>\r\n                <div\r\n                  className=\"navItem\"\r\n                  style={signInFontWeight}\r\n                  setCurrentUser={setCurrentUser}\r\n                  onClick={() => {\r\n                    handleSignInClick();\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </div>\r\n                <div\r\n                  className=\"navItem\"\r\n                  style={signUpFontWeight}\r\n                  onClick={() => {\r\n                    handleSignUpClick();\r\n                  }}\r\n                >\r\n                  Sign Up\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mynavbar;\r\n"]},"metadata":{},"sourceType":"module"}