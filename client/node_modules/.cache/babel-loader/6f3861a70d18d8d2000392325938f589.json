{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\src\\\\Components\\\\Searchbar.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport React, { useState } from \"react\";\nimport { Axios } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction Searchbar(props) {\n  _s();\n\n  const [location, setLocation] = useState(\"Taipei\");\n  const [temp, setTemp] = useState(0);\n  const [id, setId] = useState(0);\n  const [weather, setWeather] = useState(\"clear\");\n\n  const getWeather = () => {\n    Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + location + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data);\n      setTemp(response.data.main.temp);\n      setId(response.data.weather[0].id); //checkWeather();\n    });\n  };\n\n  {\n    /*const checkWeather = () => {\r\n    if (id < 300) {\r\n      setWeather(\"thunderstorm\");\r\n      setBackground({ backgroundImage: \"url(/thunderstorm.jpg)\" });\r\n    } else if (id >= 300 && id < 600) {\r\n      setWeather(\"rain\");\r\n      setBackground({ backgroundImage: \"url(/rain.jpg)\" });\r\n    } else if (id >= 600 && id < 700) {\r\n      setWeather(\"snow\");\r\n      setBackground({ backgroundImage: \"url(/snow.jpg)\" });\r\n    } else if (id >= 700 && id < 800) {\r\n      setWeather(\"mist\");\r\n      setBackground({ backgroundImage: \"url(/mist.jpg)\" });\r\n    } else {\r\n      setWeather(\"clear\");\r\n      setBackground({ backgroundImage: \"url(/clearSky.jpg)\" });\r\n    }\r\n    };*/\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Searchbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: location,\n      onChange: event => setLocation(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getWeather,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: location\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Searchbar, \"iPBW7YG+CDIgyCLdYTnh1k2QSxc=\");\n\n_c = Searchbar;\nexport default Searchbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchbar\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Components/Searchbar.js"],"names":["React","useState","Axios","APIkey","Searchbar","props","location","setLocation","temp","setTemp","id","setId","weather","setWeather","getWeather","get","then","response","data","main","event","target","value"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,MAAMC,MAAM,GAAG,kCAAf;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,EAAD,EAAKC,KAAL,IAAcV,QAAQ,CAAC,CAAD,CAA5B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,OAAD,CAAtC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvBZ,IAAAA,KAAK,CAACa,GAAN,CACE,uDACET,QADF,GAEE,SAFF,GAGEH,MAJJ,EAKEa,IALF,CAKQC,QAAD,IAAc;AACnB;AACAR,MAAAA,OAAO,CAACQ,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBX,IAApB,CAAP;AACAG,MAAAA,KAAK,CAACM,QAAQ,CAACC,IAAT,CAAcN,OAAd,CAAsB,CAAtB,EAAyBF,EAA1B,CAAL,CAHmB,CAInB;AACD,KAVD;AAWD,GAZD;;AAcA;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,KAAK,EAAEJ,QADT;AAEE,MAAA,QAAQ,EAAGc,KAAD,IAAWb,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAFlC;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArDQF,S;;KAAAA,S;AAuDT,eAAeA,SAAf","sourcesContent":["import \"../App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Axios } from \"axios\";\r\n\r\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\r\n\r\nfunction Searchbar(props) {\r\n  const [location, setLocation] = useState(\"Taipei\");\r\n  const [temp, setTemp] = useState(0);\r\n  const [id, setId] = useState(0);\r\n  const [weather, setWeather] = useState(\"clear\");\r\n\r\n  const getWeather = () => {\r\n    Axios.get(\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n        location +\r\n        \"&appid=\" +\r\n        APIkey\r\n    ).then((response) => {\r\n      //console.log(response.data);\r\n      setTemp(response.data.main.temp);\r\n      setId(response.data.weather[0].id);\r\n      //checkWeather();\r\n    });\r\n  };\r\n\r\n  {\r\n    /*const checkWeather = () => {\r\n    if (id < 300) {\r\n      setWeather(\"thunderstorm\");\r\n      setBackground({ backgroundImage: \"url(/thunderstorm.jpg)\" });\r\n    } else if (id >= 300 && id < 600) {\r\n      setWeather(\"rain\");\r\n      setBackground({ backgroundImage: \"url(/rain.jpg)\" });\r\n    } else if (id >= 600 && id < 700) {\r\n      setWeather(\"snow\");\r\n      setBackground({ backgroundImage: \"url(/snow.jpg)\" });\r\n    } else if (id >= 700 && id < 800) {\r\n      setWeather(\"mist\");\r\n      setBackground({ backgroundImage: \"url(/mist.jpg)\" });\r\n    } else {\r\n      setWeather(\"clear\");\r\n      setBackground({ backgroundImage: \"url(/clearSky.jpg)\" });\r\n    }\r\n  };*/\r\n  }\r\n\r\n  return (\r\n    <div className=\"Searchbar\">\r\n      <input\r\n        value={location}\r\n        onChange={(event) => setLocation(event.target.value)}\r\n      />\r\n      <button onClick={getWeather}>Check</button>\r\n      <p>{weather}</p>\r\n      <p>{temp}</p>\r\n      <p>{location}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n"]},"metadata":{},"sourceType":"module"}