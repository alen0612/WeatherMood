{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/User/Desktop/weathermood/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"../App.css\";import WeatherMood from\"./WeatherMood\";import React,{Fragment,useEffect,useState}from\"react\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faBoltLightning,faCloud,faQuestionCircle,faSmog,faSnowflake,faSun,faTint}from\"@fortawesome/free-solid-svg-icons\";import Select from\"react-select\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostBar(props){var today;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),mood=_useState2[0],setMood=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setID=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),moodList=_useState8[0],setMoodList=_useState8[1];var options=[{value:\"Clear\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSun,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Clear\"})]})},{value:\"Cloud\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCloud,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Cloud\"})]})},{value:\"Thunder\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faBoltLightning,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Thunder\"})]})},{value:\"Rain\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTint,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Rain\"})]})},{value:\"Mist\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSmog,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Mist\"})]})},{value:\"Snow\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSnowflake,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Snow\"})]})}];var defaultMood={value:\"Mood\",label:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faQuestionCircle,className:\"PostBarSelectIcon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"PostBarSelectSpan\",children:\"Mood\"})]})};var handleSelect=function handleSelect(event){setMood(event.value);};var postMood=function postMood(){if(content===\"\"||mood===\"Mood\"||mood===\"\")return;today=new Date();/*setDate({\r\n      year: today.getFullYear(),\r\n      month: today.getMonth() + 1,\r\n      day: today.getDate(),\r\n      hour: today.getHours(),\r\n      minute: today.getMinutes(),\r\n    });*/setMoodList([].concat(_toConsumableArray(moodList),[{content:content,mood:mood,id:id,year:today.getFullYear(),month:today.getMonth()+1,day:today.getDate(),hour:today.getHours(),minute:today.getMinutes()}]));setContent(\"\");setMood(\"\");setID(id+1);};var deletePost=function deletePost(ID){//console.log(\"delete ID: \" + ID);\n//console.log(\"mood list content: \" + JSON.stringify(moodList[ID].content));\nvar newList=moodList;//console.log(\"new List: \" + JSON.stringify(newListContent));\nvar updateList=newList.filter(function(item){return item.id!==ID;});//console.log(\"updateList: \" + JSON.stringify(updateList[0]));\nsetMoodList(updateList);};return/*#__PURE__*/_jsxs(\"div\",{className:\"PostBar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"PostBarInput\",children:[/*#__PURE__*/_jsx(Select,{placeholder:defaultMood.label,options:options,className:\"PostBarMood\",isSearchable:false,onChange:handleSelect}),/*#__PURE__*/_jsx(\"textarea\",{className:\"PostBarContent\",placeholder:\"What's on your mind?\",value:content,onChange:function onChange(event){setContent(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"PostBarButton\",onClick:postMood,children:\"Post\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarSpace\"}),/*#__PURE__*/_jsx(\"div\",{className:\"PostBarOutput\",children:moodList.map(function(moodList,index){return/*#__PURE__*/_jsx(WeatherMood,{content:moodList.content,mood:moodList.mood,id:moodList.id,year:moodList.year,month:moodList.month,day:moodList.day,hour:moodList.hour,minute:moodList.minute,deletePost:deletePost},index);})})]});}export default PostBar;","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Components/PostBar.js"],"names":["WeatherMood","React","Fragment","useEffect","useState","FontAwesomeIcon","faBoltLightning","faCloud","faQuestionCircle","faSmog","faSnowflake","faSun","faTint","Select","PostBar","props","today","mood","setMood","content","setContent","id","setID","moodList","setMoodList","options","value","label","defaultMood","handleSelect","event","postMood","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","deletePost","ID","newList","updateList","filter","item","target","map","index"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faQuestionCircle,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  let today;\r\n\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setID] = useState(0);\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  const options = [\r\n    {\r\n      value: \"Clear\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSun} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Clear</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Cloud\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faCloud} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Cloud</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Thunder\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon\r\n            icon={faBoltLightning}\r\n            className=\"PostBarSelectIcon\"\r\n          />\r\n          <span className=\"PostBarSelectSpan\">Thunder</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Rain\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faTint} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Rain</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Mist\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSmog} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Mist</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Snow\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSnowflake} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Snow</span>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const defaultMood = {\r\n    value: \"Mood\",\r\n    label: (\r\n      <>\r\n        <FontAwesomeIcon\r\n          icon={faQuestionCircle}\r\n          className=\"PostBarSelectIcon\"\r\n        />\r\n        <span className=\"PostBarSelectSpan\">Mood</span>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    if (content === \"\" || mood === \"Mood\" || mood === \"\") return;\r\n    today = new Date();\r\n    /*setDate({\r\n      year: today.getFullYear(),\r\n      month: today.getMonth() + 1,\r\n      day: today.getDate(),\r\n      hour: today.getHours(),\r\n      minute: today.getMinutes(),\r\n    });*/\r\n\r\n    setMoodList([\r\n      ...moodList,\r\n      {\r\n        content: content,\r\n        mood: mood,\r\n        id: id,\r\n        year: today.getFullYear(),\r\n        month: today.getMonth() + 1,\r\n        day: today.getDate(),\r\n        hour: today.getHours(),\r\n        minute: today.getMinutes(),\r\n      },\r\n    ]);\r\n\r\n    setContent(\"\");\r\n    setMood(\"\");\r\n    setID(id + 1);\r\n  };\r\n\r\n  const deletePost = (ID) => {\r\n    //console.log(\"delete ID: \" + ID);\r\n    //console.log(\"mood list content: \" + JSON.stringify(moodList[ID].content));\r\n    const newList = moodList;\r\n    //console.log(\"new List: \" + JSON.stringify(newListContent));\r\n    const updateList = newList.filter((item) => item.id !== ID);\r\n    //console.log(\"updateList: \" + JSON.stringify(updateList[0]));\r\n\r\n    setMoodList(updateList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        <Select\r\n          placeholder={defaultMood.label}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={handleSelect}\r\n        />\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((moodList, index) => {\r\n          return (\r\n            <WeatherMood\r\n              content={moodList.content}\r\n              mood={moodList.mood}\r\n              id={moodList.id}\r\n              year={moodList.year}\r\n              month={moodList.month}\r\n              day={moodList.day}\r\n              hour={moodList.hour}\r\n              minute={moodList.minute}\r\n              key={index}\r\n              deletePost={deletePost}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}