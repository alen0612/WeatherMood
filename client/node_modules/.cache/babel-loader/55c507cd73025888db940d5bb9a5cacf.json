{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport SignIn from \"./Components/SignIn\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\nimport SignUp from \"./Components/SignUp\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  _s();\n\n  const [showToday, setShowToday] = useState(true);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openSignUp, setOpenSignUp] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: \"\",\n    status: false\n  });\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"°C\",\n    weather: \"Clear\"\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\"\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/WeatherMood/clearLogo.png)\"\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/WeatherMood/clear.jpg)\"\n  });\n  useEffect(() => {\n    getLocation();\n    getDate();\n    axios.get(\"http://localhost:3001/users/auth\", {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setAuthState(false);\n      } else {\n        setAuthState(true);\n      }\n    });\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation) navigator.geolocation.getCurrentPosition(getLonandLat);else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude); //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\" + lat + \"&lon=\" + lon + \"&units=\" + todayWeather.unit + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data);\n      //console.log(response.data.weather[0].main);\n      setTodayWeather(prevState => ({ ...prevState,\n        graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n        temp: parseInt(response.data.main.temp),\n        location: response.data.name\n      }));\n      checkWeather(response.data.weather[0].id);\n    }).catch(error => {\n      alert(\"City Not Found!\");\n    });\n    Axios.get(\"https://api.openweathermap.org/data/2.5/forecast?lat=\" + lat + \"&lon=\" + lon + \"&units=\" + todayWeather.unit + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data.city.name);\n      setForecast(prevState => ({ ...prevState,\n        temp: [parseInt(response.data.list[8].main.temp), parseInt(response.data.list[16].main.temp), parseInt(response.data.list[24].main.temp), parseInt(response.data.list[32].main.temp)],\n        location: response.data.city.name\n      }));\n      checkForecastWeather([response.data.list[8].weather[0].id, response.data.list[16].weather[0].id, response.data.list[24].weather[0].id, response.data.list[32].weather[0].id]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast(prevState => ({ ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [setForecastIcon(ID[0]), setForecastIcon(ID[1]), setForecastIcon(ID[2]), setForecastIcon(ID[3])]\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";else if (ID >= 300 && ID < 600) return \"Rain\";else if (ID >= 600 && ID < 700) return \"Snow\";else if (ID >= 700 && ID < 800) return \"Mist\";else if (ID === 800) return \"Clear\";else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + todayWeather.location + \"&units=\" + todayWeather.unit + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data);\n      //console.log(response.data.weather[0].main);\n      setTodayWeather(prevState => ({ ...prevState,\n        graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n        temp: parseInt(response.data.main.temp)\n      }));\n      checkWeather(response.data.weather[0].id);\n    }).catch(error => {\n      alert(\"City Not Found!\");\n      getLocation();\n    });\n    Axios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=\" + todayWeather.location + \"&units=\" + todayWeather.unit + \"&appid=\" + APIkey).then(response => {\n      //console.log(response.data);\n      setForecast(prevState => ({ ...prevState,\n        temp: [parseInt(response.data.list[8].main.temp), parseInt(response.data.list[16].main.temp), parseInt(response.data.list[24].main.temp), parseInt(response.data.list[32].main.temp)],\n        location: response.data.city.name\n      }));\n      checkForecastWeather([response.data.list[8].weather[0].id, response.data.list[16].weather[0].id, response.data.list[24].weather[0].id, response.data.list[32].weather[0].id]);\n    });\n  };\n\n  const checkWeather = weatherID => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Thunderstorm\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/thunderstorm.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/thunderstormLogo.png)\"\n      });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Rain\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/rain.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/rainLogo.png)\"\n      });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Snow\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/snow.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/snowLogo.png)\"\n      });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Mist\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/mist.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/mistLogo.png)\"\n      });\n    } else if (weatherID === 800) {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Clear\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/clear.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/clearLogo.png)\"\n      });\n    } else {\n      setTodayWeather(prevState => ({ ...prevState,\n        weather: \"Clouds\"\n      }));\n      setBackground({\n        backgroundImage: \"url(/WeatherMood/cloud.jpg)\"\n      });\n      setLogo({\n        backgroundImage: \"url(/WeatherMood/cloudLogo.png)\"\n      });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather(prevState => ({ ...prevState,\n      location: data\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather(prevState => ({ ...prevState,\n      unit: data\n    }));\n  }\n\n  return showToday === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: [/*#__PURE__*/_jsxDEV(Mynavbar, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        currentUser: currentUser,\n        authState: authState,\n        setShowToday: setShowToday,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp,\n        setCurrentUser: setCurrentUser,\n        setAuthState: setAuthState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), openSignIn === true ? /*#__PURE__*/_jsxDEV(SignIn, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp,\n        setCurrentUser: setCurrentUser,\n        setAuthState: setAuthState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this) : openSignUp === true ? /*#__PURE__*/_jsxDEV(SignUp, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Today, {\n        background: background,\n        logo: logo,\n        todayWeather: todayWeather,\n        currentUser: currentUser,\n        getWeather: getWeather,\n        setTodayWeather: setTodayWeather,\n        setLocation: setLocation,\n        setUnit: setUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authState,\n        setAuthState\n      },\n      children: [/*#__PURE__*/_jsxDEV(Mynavbar, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        currentUser: currentUser,\n        authState: authState,\n        setShowToday: setShowToday,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp,\n        setCurrentUser: setCurrentUser,\n        setAuthState: setAuthState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), openSignIn === true ? /*#__PURE__*/_jsxDEV(SignIn, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp,\n        setCurrentUser: setCurrentUser,\n        setAuthState: setAuthState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this) : openSignUp === true ? /*#__PURE__*/_jsxDEV(SignUp, {\n        openSignIn: openSignIn,\n        openSignUp: openSignUp,\n        setOpenSignIn: setOpenSignIn,\n        setOpenSignUp: setOpenSignUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Forecast, {\n        todayWeather: todayWeather,\n        date: date,\n        dayList: dayList,\n        forecast: forecast,\n        getWeather: getWeather,\n        setTodayWeather: setTodayWeather,\n        setLocation: setLocation,\n        setUnit: setUnit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mXH9HUpoUloF/fjPh0hny4SmlTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/client/src/App.js"],"names":["Mynavbar","Today","Forecast","SignIn","React","useEffect","useState","Alert","Axios","SignUp","AuthContext","axios","APIkey","App","showToday","setShowToday","openSignIn","setOpenSignIn","openSignUp","setOpenSignUp","currentUser","setCurrentUser","authState","setAuthState","username","id","status","date","setDate","dayList","todayWeather","setTodayWeather","location","unit","temp","graph","weather","forecast","setForecast","logo","setLogo","backgroundImage","background","setBackground","getLocation","getDate","get","headers","accessToken","localStorage","getItem","then","response","data","error","day","Date","getDay","navigator","geolocation","getCurrentPosition","getLonandLat","position","initialWeather","coords","longitude","latitude","lon","lat","prevState","parseInt","main","name","checkWeather","catch","alert","list","city","checkForecastWeather","ID","setForecastIcon","getWeather","weatherID","setLocation","setUnit"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Mynavbar from \"./Components/Mynavbar\";\nimport Today from \"./Pages/Today\";\nimport Forecast from \"./Pages/Forecast\";\nimport SignIn from \"./Components/SignIn\";\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"bootstrap\";\nimport Axios from \"axios\";\nimport SignUp from \"./Components/SignUp\";\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport axios from \"axios\";\n\nconst APIkey = \"029ab88b8a27d39ef20a062c38c4b411\";\n\nfunction App() {\n  const [showToday, setShowToday] = useState(true);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openSignUp, setOpenSignUp] = useState(false);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [authState, setAuthState] = useState({\n    username: \"\",\n    id: \"\",\n    status: false,\n  });\n\n  const [date, setDate] = useState(0);\n  const dayList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n\n  const [todayWeather, setTodayWeather] = useState({\n    location: \"Taipei\",\n    unit: \"metric\",\n    temp: 0,\n    graph: \"°C\",\n    weather: \"Clear\",\n  });\n  const [forecast, setForecast] = useState({\n    temp: [0, 0, 0, 0],\n    weather: [\"Clear\", \"Clear\", \"Clear\", \"Clear\"],\n    id: [0, 0, 0, 0],\n    location: \"Taipei\",\n  });\n  const [logo, setLogo] = useState({\n    backgroundImage: \"url(/WeatherMood/clearLogo.png)\",\n  });\n  const [background, setBackground] = useState({\n    backgroundImage: \"url(/WeatherMood/clear.jpg)\",\n  });\n\n  useEffect(() => {\n    getLocation();\n    getDate();\n    axios\n      .get(\"http://localhost:3001/users/auth\", {\n        headers: { accessToken: localStorage.getItem(\"accessToken\") },\n      })\n      .then((response) => {\n        if (response.data.error) {\n          setAuthState(false);\n        } else {\n          setAuthState(true);\n        }\n      });\n  }, []);\n\n  const getDate = () => {\n    var day = new Date();\n    setDate(day.getDay());\n  };\n\n  const getLocation = () => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(getLonandLat);\n    else Alert(\"Geolocation is not supported!\");\n  };\n\n  function getLonandLat(position) {\n    initialWeather(position.coords.longitude, position.coords.latitude);\n    //initialForecast(position.coords.longitude, position.coords.latitude);\n  }\n\n  const initialWeather = (lon, lat) => {\n    // this will render initial page when user get in website for the first time\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n          location: response.data.name,\n        }));\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data.city.name);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  function checkForecastWeather(ID) {\n    //console.log(\"set forecast ID\");\n    setForecast((prevState) => ({\n      ...prevState,\n      id: [ID[0], ID[1], ID[2], ID[3]],\n      weather: [\n        setForecastIcon(ID[0]),\n        setForecastIcon(ID[1]),\n        setForecastIcon(ID[2]),\n        setForecastIcon(ID[3]),\n      ],\n    }));\n  }\n\n  function setForecastIcon(ID) {\n    //console.log(\"set forecast icon\");\n    if (ID >= 200 && ID < 300) return \"Tunderstorm\";\n    else if (ID >= 300 && ID < 600) return \"Rain\";\n    else if (ID >= 600 && ID < 700) return \"Snow\";\n    else if (ID >= 700 && ID < 800) return \"Mist\";\n    else if (ID === 800) return \"Clear\";\n    else return \"Clouds\";\n  }\n\n  const getWeather = () => {\n    //console.log(\"int today.getWeather: \" + unit);\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    )\n      .then((response) => {\n        //console.log(response.data);\n        //console.log(response.data.weather[0].main);\n\n        setTodayWeather((prevState) => ({\n          ...prevState,\n          graph: todayWeather.unit === \"metric\" ? \"°C\" : \"°F\",\n          temp: parseInt(response.data.main.temp),\n        }));\n\n        checkWeather(response.data.weather[0].id);\n      })\n      .catch((error) => {\n        alert(\"City Not Found!\");\n        getLocation();\n      });\n\n    Axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        todayWeather.location +\n        \"&units=\" +\n        todayWeather.unit +\n        \"&appid=\" +\n        APIkey\n    ).then((response) => {\n      //console.log(response.data);\n      setForecast((prevState) => ({\n        ...prevState,\n        temp: [\n          parseInt(response.data.list[8].main.temp),\n          parseInt(response.data.list[16].main.temp),\n          parseInt(response.data.list[24].main.temp),\n          parseInt(response.data.list[32].main.temp),\n        ],\n        location: response.data.city.name,\n      }));\n      checkForecastWeather([\n        response.data.list[8].weather[0].id,\n        response.data.list[16].weather[0].id,\n        response.data.list[24].weather[0].id,\n        response.data.list[32].weather[0].id,\n      ]);\n    });\n  };\n\n  const checkWeather = (weatherID) => {\n    if (weatherID >= 200 && weatherID < 300) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Thunderstorm\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/thunderstorm.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/thunderstormLogo.png)\" });\n    } else if (weatherID >= 300 && weatherID < 600) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Rain\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/rain.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/rainLogo.png)\" });\n    } else if (weatherID >= 600 && weatherID < 700) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Snow\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/snow.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/snowLogo.png)\" });\n    } else if (weatherID >= 700 && weatherID < 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Mist\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/mist.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/mistLogo.png)\" });\n    } else if (weatherID === 800) {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clear\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/clear.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/clearLogo.png)\" });\n    } else {\n      setTodayWeather((prevState) => ({\n        ...prevState,\n        weather: \"Clouds\",\n      }));\n      setBackground({ backgroundImage: \"url(/WeatherMood/cloud.jpg)\" });\n      setLogo({ backgroundImage: \"url(/WeatherMood/cloudLogo.png)\" });\n    }\n  };\n\n  function setLocation(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      location: data,\n    }));\n  }\n\n  function setUnit(data) {\n    setTodayWeather((prevState) => ({\n      ...prevState,\n      unit: data,\n    }));\n  }\n\n  return showToday === true ? (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Today\n            background={background}\n            logo={logo}\n            todayWeather={todayWeather}\n            currentUser={currentUser}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <AuthContext.Provider value={{ authState, setAuthState }}>\n        <Mynavbar\n          openSignIn={openSignIn}\n          openSignUp={openSignUp}\n          currentUser={currentUser}\n          authState={authState}\n          setShowToday={setShowToday}\n          setOpenSignIn={setOpenSignIn}\n          setOpenSignUp={setOpenSignUp}\n          setCurrentUser={setCurrentUser}\n          setAuthState={setAuthState}\n        />\n\n        {openSignIn === true ? (\n          <SignIn\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n            setCurrentUser={setCurrentUser}\n            setAuthState={setAuthState}\n          />\n        ) : openSignUp === true ? (\n          <SignUp\n            openSignIn={openSignIn}\n            openSignUp={openSignUp}\n            setOpenSignIn={setOpenSignIn}\n            setOpenSignUp={setOpenSignUp}\n          />\n        ) : (\n          <Forecast\n            todayWeather={todayWeather}\n            date={date}\n            dayList={dayList}\n            forecast={forecast}\n            getWeather={getWeather}\n            setTodayWeather={setTodayWeather}\n            setLocation={setLocation}\n            setUnit={setUnit}\n          />\n        )}\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}