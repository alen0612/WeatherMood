{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\weathermood\\\\src\\\\Components\\\\PostBar.js\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport WeatherMood from \"./WeatherMood\";\nimport React, { Fragment, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBoltLightning, faCloud, faSmog, faSnowflake, faSun, faTint } from \"@fortawesome/free-solid-svg-icons\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostBar(props) {\n  _s();\n\n  const [mood, setMood] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [moodList, setMoodList] = useState([]);\n  const options = [{\n    value: \"Clear\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSun,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Cloud\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCloud,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Cloud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Thunder\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBoltLightning,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Thunder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Rain\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faTint,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Rain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Mist\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSmog,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Mist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, {\n    value: \"Snow\",\n    label: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSnowflake,\n        className: \"PostBarSelectIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"PostBarSelectSpan\",\n        children: \"Snow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const selectPlacholder = \"Mood\";\n\n  const handleSelect = event => {\n    setMood(event.value);\n  };\n\n  const postMood = () => {\n    let today = new Date();\n    let date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n    console.log(date);\n    setMoodList([...moodList, {\n      content: content,\n      mood: mood\n    }]);\n    setContent(\"\");\n    setMood(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarInput\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        placeholder: selectPlacholder,\n        options: options,\n        className: \"PostBarMood\",\n        isSearchable: false,\n        onChange: event => handleSelect(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"PostBarContent\",\n        placeholder: \"What's on your mind?\",\n        value: content,\n        onChange: event => {\n          setContent(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"PostBarButton\",\n        onClick: postMood,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarSpace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostBarOutput\",\n      children: moodList.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(WeatherMood, {\n          content: list.content,\n          mood: list.mood\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostBar, \"yLMq08SbfMbJTCdRL/jhEx7Zg0o=\");\n\n_c = PostBar;\nexport default PostBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBar\");","map":{"version":3,"sources":["C:/Users/User/Desktop/weathermood/src/Components/PostBar.js"],"names":["WeatherMood","React","Fragment","useState","FontAwesomeIcon","faBoltLightning","faCloud","faSmog","faSnowflake","faSun","faTint","Select","PostBar","props","mood","setMood","content","setContent","moodList","setMoodList","options","value","label","selectPlacholder","handleSelect","event","postMood","today","Date","date","getFullYear","getMonth","getDate","console","log","target","map","list","index"],"mappings":"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","sourcesContent":["import \"../App.css\";\r\nimport WeatherMood from \"./WeatherMood\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBoltLightning,\r\n  faCloud,\r\n  faSmog,\r\n  faSnowflake,\r\n  faSun,\r\n  faTint,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select from \"react-select\";\r\n\r\nfunction PostBar(props) {\r\n  const [mood, setMood] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [moodList, setMoodList] = useState([]);\r\n\r\n  const options = [\r\n    {\r\n      value: \"Clear\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSun} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Clear</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Cloud\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faCloud} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Cloud</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Thunder\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon\r\n            icon={faBoltLightning}\r\n            className=\"PostBarSelectIcon\"\r\n          />\r\n          <span className=\"PostBarSelectSpan\">Thunder</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Rain\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faTint} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Rain</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Mist\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSmog} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Mist</span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: \"Snow\",\r\n      label: (\r\n        <>\r\n          <FontAwesomeIcon icon={faSnowflake} className=\"PostBarSelectIcon\" />\r\n          <span className=\"PostBarSelectSpan\">Snow</span>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const selectPlacholder = \"Mood\";\r\n\r\n  const handleSelect = (event) => {\r\n    setMood(event.value);\r\n  };\r\n\r\n  const postMood = () => {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n    console.log(date);\r\n\r\n    setMoodList([...moodList, { content: content, mood: mood }]);\r\n    setContent(\"\");\r\n    setMood(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"PostBar\">\r\n      <div className=\"PostBarInput\">\r\n        <Select\r\n          placeholder={selectPlacholder}\r\n          options={options}\r\n          className=\"PostBarMood\"\r\n          isSearchable={false}\r\n          onChange={(event) => handleSelect(event)}\r\n        />\r\n        <textarea\r\n          className=\"PostBarContent\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={content}\r\n          onChange={(event) => {\r\n            setContent(event.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button className=\"PostBarButton\" onClick={postMood}>\r\n          Post\r\n        </button>\r\n      </div>\r\n      <div className=\"PostBarSpace\"></div>\r\n      <div className=\"PostBarOutput\">\r\n        {moodList.map((list, index) => {\r\n          return (\r\n            <WeatherMood content={list.content} mood={list.mood} key={index} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostBar;\r\n"]},"metadata":{},"sourceType":"module"}